server {
    server_name socially.my.to;

    root /home/eyad/Socially/client/build;
    index index.html;

    location / {
        try_files $uri /index.html;
        # Set global cache headers
        add_header Cache-Control "public, max-age=3600";
        expires 1h;
    }

    location /api/ {
        proxy_pass http://localhost:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    location /socket.io/ {
        proxy_pass http://localhost:5000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';j
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /assets/ {
        alias /home/eyad/Socially/server/public/assets/;
        autoindex off;

        # Optional: enable caching
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
    }
    location /storage/ {
        alias /home/eyad/Socially/server/public/storage/;
        autoindex off;

        # Optional: enable caching
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
    }
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/socially.my.to/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/socially.my.to/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = socially.my.to) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name socially.my.to;
    return 404; # managed by Certbot
}